#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef IYZICOSDK_SWIFT_H
#define IYZICOSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="iyzicoSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

typedef SWIFT_ENUM(NSInteger, BasketItemType, open) {
  BasketItemTypePHYSICAL = 0,
  BasketItemTypeVIRTUAL = 1,
};

typedef SWIFT_ENUM(NSInteger, Currency, open) {
  CurrencyTRY = 0,
  CurrencyUSD = 1,
  CurrencyEUR = 2,
  CurrencyGBP = 3,
  CurrencyIRR = 4,
};

@protocol IyzicoDelegate;

SWIFT_CLASS("_TtC9iyzicoSDK6Iyzico")
@interface Iyzico : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) Iyzico * _Nonnull shared;)
+ (Iyzico * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, weak) id <IyzicoDelegate> _Nullable delegate;)
+ (id <IyzicoDelegate> _Nullable)delegate SWIFT_WARN_UNUSED_RESULT;
+ (void)setDelegate:(id <IyzicoDelegate> _Nullable)value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSString;
@class NSNumber;
enum PaymentGroup : NSInteger;
@class IyzicoBasketItem;

@interface Iyzico (SWIFT_EXTENSION(iyzicoSDK))
- (void)startPayWithIyzicoWithBrand:(NSString * _Nonnull)brand price:(double)price paidPrice:(double)paidPrice currency:(enum Currency)currency enabledInstallments:(NSArray<NSNumber *> * _Nonnull)enabledInstallments basketId:(NSString * _Nonnull)basketId paymentGroup:(enum PaymentGroup)paymentGroup paymentSource:(NSString * _Nonnull)paymentSource urlCallback:(NSString * _Nonnull)urlCallback buyerId:(NSString * _Nonnull)buyerId buyerName:(NSString * _Nonnull)buyerName buyerSurname:(NSString * _Nonnull)buyerSurname buyerIdentityNumber:(NSString * _Nonnull)buyerIdentityNumber buyerCity:(NSString * _Nonnull)buyerCity buyerCountry:(NSString * _Nonnull)buyerCountry buyerEmail:(NSString * _Nonnull)buyerEmail buyerPhone:(NSString * _Nonnull)buyerPhone buyerIp:(NSString * _Nonnull)buyerIp buyerRegistrationAddress:(NSString * _Nonnull)buyerRegistrationAddress buyerRegistrationDate:(NSString * _Nonnull)buyerRegistrationDate buyerLastLoginDate:(NSString * _Nonnull)buyerLastLoginDate billingContactName:(NSString * _Nonnull)billingContactName billingCity:(NSString * _Nonnull)billingCity billingCountry:(NSString * _Nonnull)billingCountry billingAddress:(NSString * _Nonnull)billingAddress shippingContactName:(NSString * _Nonnull)shippingContactName shippingCity:(NSString * _Nonnull)shippingCity shippingCountry:(NSString * _Nonnull)shippingCountry shippingAddress:(NSString * _Nonnull)shippingAddress basketItemList:(NSArray<IyzicoBasketItem *> * _Nonnull)basketItemList;
- (void)startTopUpWithBuyerEmail:(NSString * _Nonnull)buyerEmail buyerPhone:(NSString * _Nonnull)buyerPhone buyerName:(NSString * _Nullable)buyerName buyerSurname:(NSString * _Nullable)buyerSurname;
- (void)startCashOutWithBuyerEmail:(NSString * _Nonnull)buyerEmail buyerPhone:(NSString * _Nonnull)buyerPhone walletPrice:(double)walletPrice buyerName:(NSString * _Nullable)buyerName buyerSurname:(NSString * _Nullable)buyerSurname;
@end


enum Language : NSInteger;

@interface Iyzico (SWIFT_EXTENSION(iyzicoSDK))
- (void)initializeWithClientIp:(NSString * _Nonnull)clientIp clientId:(NSString * _Nonnull)clientId clientSecret:(NSString * _Nonnull)clientSecret baseUrl:(NSString * _Nonnull)baseUrl merchantApiKey:(NSString * _Nullable)merchantApiKey merchantSecretKey:(NSString * _Nullable)merchantSecretKey language:(enum Language)language;
- (void)showErrorWithErrorDescription:(NSString * _Nullable)errorDescription;
@end


SWIFT_CLASS("_TtC9iyzicoSDK16IyzicoBasketItem")
@interface IyzicoBasketItem : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum ResultCode : NSInteger;

SWIFT_PROTOCOL("_TtP9iyzicoSDK14IyzicoDelegate_")
@protocol IyzicoDelegate
- (void)didOperationSuccessWithMessage:(NSString * _Nonnull)message;
- (void)didOperationFailedWithState:(enum ResultCode)state message:(NSString * _Nonnull)message;
@end

typedef SWIFT_ENUM(NSInteger, Language, open) {
  LanguageTURKISH = 0,
  LanguageENGLISH = 1,
};


typedef SWIFT_ENUM(NSInteger, PaymentGroup, open) {
  PaymentGroupPRODUCT = 0,
  PaymentGroupLISTING = 1,
  PaymentGroupSUBSCRIPTION = 2,
  PaymentGroupNone = 3,
};

typedef SWIFT_ENUM(NSInteger, ResultCode, open) {
  ResultCodeLanguageError = 1,
  ResultCodeError = 2,
  ResultCodeTimeOut = 3,
  ResultCodePhoneError = 4,
  ResultCodeEmailError = 5,
  ResultCodeBrandError = 6,
  ResultCodePriceError = 7,
  ResultCodeProductIDError = 8,
  ResultCodeWalletPriceError = 9,
  ResultCodeClientIpError = 10,
  ResultCodeClientIdError = 11,
  ResultCodeClientSecretKeyError = 12,
  ResultCodeBaseUrlError = 13,
  ResultCodeMerchantApiKeyError = 14,
  ResultCodeMerchantSecretKeyError = 15,
  ResultCodePaidPriceError = 16,
  ResultCodeUrlCallbackError = 17,
  ResultCodeEnabledinstallmentError = 18,
  ResultCodeBasketIDError = 19,
  ResultCodeBuyerIDError = 20,
  ResultCodeBuyerNameError = 21,
  ResultCodeBuyerSurnameError = 22,
  ResultCodeBuyerIdentityNumberError = 23,
  ResultCodeBuyerCityError = 24,
  ResultCodeBuyerCountryError = 25,
  ResultCodeBuyerEmailError = 26,
  ResultCodeBuyerPhoneError = 27,
  ResultCodeBuyerIPError = 28,
  ResultCodeBuyerRegistrationAddressError = 29,
  ResultCodeClosedTransactionError = 30,
  ResultCodeBasketProductPriceError = 31,
  ResultCodeBasketProductItemTypeError = 32,
  ResultCodeBillingContactNameError = 33,
  ResultCodeBillingCityError = 34,
  ResultCodeShippingCountryError = 35,
  ResultCodeShippingAddressError = 36,
  ResultCodeEmptyBasketError = 37,
  ResultCodeFullBasketError = 38,
  ResultCodeBasketProductIdError = 39,
  ResultCodeBasketProductNameError = 40,
  ResultCodeBasketProductCategoryError = 41,
  ResultCodeBillingAdressError = 42,
  ResultCodeShippingContactNameError = 43,
  ResultCodeShippingCityError = 44,
  ResultCodeBillingCountryError = 45,
  ResultCodeSuccess = 99,
};





















#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
#ifndef IYZICOSDK_SWIFT_H
#define IYZICOSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="iyzicoSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

typedef SWIFT_ENUM(NSInteger, BasketItemType, open) {
  BasketItemTypePHYSICAL = 0,
  BasketItemTypeVIRTUAL = 1,
};

typedef SWIFT_ENUM(NSInteger, Currency, open) {
  CurrencyTRY = 0,
  CurrencyUSD = 1,
  CurrencyEUR = 2,
  CurrencyGBP = 3,
  CurrencyIRR = 4,
};

@protocol IyzicoDelegate;

SWIFT_CLASS("_TtC9iyzicoSDK6Iyzico")
@interface Iyzico : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) Iyzico * _Nonnull shared;)
+ (Iyzico * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, weak) id <IyzicoDelegate> _Nullable delegate;)
+ (id <IyzicoDelegate> _Nullable)delegate SWIFT_WARN_UNUSED_RESULT;
+ (void)setDelegate:(id <IyzicoDelegate> _Nullable)value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSString;
@class NSNumber;
enum PaymentGroup : NSInteger;
@class IyzicoBasketItem;

@interface Iyzico (SWIFT_EXTENSION(iyzicoSDK))
- (void)startPayWithIyzicoWithBrand:(NSString * _Nonnull)brand price:(double)price paidPrice:(double)paidPrice currency:(enum Currency)currency enabledInstallments:(NSArray<NSNumber *> * _Nonnull)enabledInstallments basketId:(NSString * _Nonnull)basketId paymentGroup:(enum PaymentGroup)paymentGroup paymentSource:(NSString * _Nonnull)paymentSource urlCallback:(NSString * _Nonnull)urlCallback buyerId:(NSString * _Nonnull)buyerId buyerName:(NSString * _Nonnull)buyerName buyerSurname:(NSString * _Nonnull)buyerSurname buyerIdentityNumber:(NSString * _Nonnull)buyerIdentityNumber buyerCity:(NSString * _Nonnull)buyerCity buyerCountry:(NSString * _Nonnull)buyerCountry buyerEmail:(NSString * _Nonnull)buyerEmail buyerPhone:(NSString * _Nonnull)buyerPhone buyerIp:(NSString * _Nonnull)buyerIp buyerRegistrationAddress:(NSString * _Nonnull)buyerRegistrationAddress buyerRegistrationDate:(NSString * _Nonnull)buyerRegistrationDate buyerLastLoginDate:(NSString * _Nonnull)buyerLastLoginDate billingContactName:(NSString * _Nonnull)billingContactName billingCity:(NSString * _Nonnull)billingCity billingCountry:(NSString * _Nonnull)billingCountry billingAddress:(NSString * _Nonnull)billingAddress shippingContactName:(NSString * _Nonnull)shippingContactName shippingCity:(NSString * _Nonnull)shippingCity shippingCountry:(NSString * _Nonnull)shippingCountry shippingAddress:(NSString * _Nonnull)shippingAddress basketItemList:(NSArray<IyzicoBasketItem *> * _Nonnull)basketItemList;
- (void)startTopUpWithBuyerEmail:(NSString * _Nonnull)buyerEmail buyerPhone:(NSString * _Nonnull)buyerPhone buyerName:(NSString * _Nullable)buyerName buyerSurname:(NSString * _Nullable)buyerSurname;
- (void)startCashOutWithBuyerEmail:(NSString * _Nonnull)buyerEmail buyerPhone:(NSString * _Nonnull)buyerPhone walletPrice:(double)walletPrice buyerName:(NSString * _Nullable)buyerName buyerSurname:(NSString * _Nullable)buyerSurname;
@end


enum Language : NSInteger;

@interface Iyzico (SWIFT_EXTENSION(iyzicoSDK))
- (void)initializeWithClientIp:(NSString * _Nonnull)clientIp clientId:(NSString * _Nonnull)clientId clientSecret:(NSString * _Nonnull)clientSecret baseUrl:(NSString * _Nonnull)baseUrl merchantApiKey:(NSString * _Nullable)merchantApiKey merchantSecretKey:(NSString * _Nullable)merchantSecretKey language:(enum Language)language;
- (void)showErrorWithErrorDescription:(NSString * _Nullable)errorDescription;
@end


SWIFT_CLASS("_TtC9iyzicoSDK16IyzicoBasketItem")
@interface IyzicoBasketItem : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum ResultCode : NSInteger;

SWIFT_PROTOCOL("_TtP9iyzicoSDK14IyzicoDelegate_")
@protocol IyzicoDelegate
- (void)didOperationSuccessWithMessage:(NSString * _Nonnull)message;
- (void)didOperationFailedWithState:(enum ResultCode)state message:(NSString * _Nonnull)message;
@end

typedef SWIFT_ENUM(NSInteger, Language, open) {
  LanguageTURKISH = 0,
  LanguageENGLISH = 1,
};


typedef SWIFT_ENUM(NSInteger, PaymentGroup, open) {
  PaymentGroupPRODUCT = 0,
  PaymentGroupLISTING = 1,
  PaymentGroupSUBSCRIPTION = 2,
  PaymentGroupNone = 3,
};

typedef SWIFT_ENUM(NSInteger, ResultCode, open) {
  ResultCodeLanguageError = 1,
  ResultCodeError = 2,
  ResultCodeTimeOut = 3,
  ResultCodePhoneError = 4,
  ResultCodeEmailError = 5,
  ResultCodeBrandError = 6,
  ResultCodePriceError = 7,
  ResultCodeProductIDError = 8,
  ResultCodeWalletPriceError = 9,
  ResultCodeClientIpError = 10,
  ResultCodeClientIdError = 11,
  ResultCodeClientSecretKeyError = 12,
  ResultCodeBaseUrlError = 13,
  ResultCodeMerchantApiKeyError = 14,
  ResultCodeMerchantSecretKeyError = 15,
  ResultCodePaidPriceError = 16,
  ResultCodeUrlCallbackError = 17,
  ResultCodeEnabledinstallmentError = 18,
  ResultCodeBasketIDError = 19,
  ResultCodeBuyerIDError = 20,
  ResultCodeBuyerNameError = 21,
  ResultCodeBuyerSurnameError = 22,
  ResultCodeBuyerIdentityNumberError = 23,
  ResultCodeBuyerCityError = 24,
  ResultCodeBuyerCountryError = 25,
  ResultCodeBuyerEmailError = 26,
  ResultCodeBuyerPhoneError = 27,
  ResultCodeBuyerIPError = 28,
  ResultCodeBuyerRegistrationAddressError = 29,
  ResultCodeClosedTransactionError = 30,
  ResultCodeBasketProductPriceError = 31,
  ResultCodeBasketProductItemTypeError = 32,
  ResultCodeBillingContactNameError = 33,
  ResultCodeBillingCityError = 34,
  ResultCodeShippingCountryError = 35,
  ResultCodeShippingAddressError = 36,
  ResultCodeEmptyBasketError = 37,
  ResultCodeFullBasketError = 38,
  ResultCodeBasketProductIdError = 39,
  ResultCodeBasketProductNameError = 40,
  ResultCodeBasketProductCategoryError = 41,
  ResultCodeBillingAdressError = 42,
  ResultCodeShippingContactNameError = 43,
  ResultCodeShippingCityError = 44,
  ResultCodeBillingCountryError = 45,
  ResultCodeSuccess = 99,
};





















#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
